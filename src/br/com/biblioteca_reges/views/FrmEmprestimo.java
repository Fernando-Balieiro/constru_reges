/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package br.com.biblioteca_reges.views;

import br.com.biblioteca_reges.dominios.Emprestimo;
import br.com.biblioteca_reges.rdn.EmprestimoRdn;
import br.com.biblioteca_reges.rdn.LivroRdn;
import java.awt.Image;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author doniz
 */
public class FrmEmprestimo extends javax.swing.JInternalFrame {

    private boolean editConfirm = false;
    private boolean deleteConfirm = false;
    private boolean createConfirm = false;
    
    /**
     * Creates new form FrmEmprestimo
     */
    public FrmEmprestimo() {
        initComponents();
        
        LivroRdn livro = new LivroRdn();
        
        List<String> livros = livro.obterTodosLivros();
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(livros.toArray(new String[0]));
        
        comboLivros.setModel(model);
        
        // Obtendo a data atual
        Calendar dataAtual = Calendar.getInstance();
        Calendar dataDev = Calendar.getInstance();
        
        int diaEmp = dataDev.get(Calendar.DAY_OF_MONTH);
        
        dataDev.set(Calendar.DAY_OF_MONTH, diaEmp + 30);

        // Formatando a data para exibição
        SimpleDateFormat formatoData = new SimpleDateFormat("dd/MM/yyyy");
        
        String dataFormatada = formatoData.format(dataAtual.getTime());
        String dataFormatadaDev = formatoData.format(dataDev.getTime());

        // Definindo a data formatada no JTextField
        txtDataEmp.setText(dataFormatada);
        txtDataDev.setText(dataFormatadaDev);
        
        ImageIcon icon = new ImageIcon("Assets/lupa.png");
        Image originalImage = icon.getImage();
        Image resizedImage = originalImage.getScaledInstance(20, 20, Image.SCALE_SMOOTH);
        
        ImageIcon resizedIcon = new ImageIcon(resizedImage);
        botPesquisa.setIcon(resizedIcon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NomeLivro = new java.awt.Label();
        NomeLivro1 = new java.awt.Label();
        txtRa = new javax.swing.JTextField();
        NomeLivro2 = new java.awt.Label();
        txtDataEmp = new javax.swing.JFormattedTextField();
        NomeLivro3 = new java.awt.Label();
        txtDataDev = new javax.swing.JFormattedTextField();
        botConfirmar = new javax.swing.JButton();
        botPesquisa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        botEditar = new javax.swing.JButton();
        botDeletar = new javax.swing.JButton();
        txtNomeLivro = new javax.swing.JTextField();
        botNovo = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        comboLivros = new javax.swing.JComboBox<String>();
        fechaJanela = new javax.swing.JButton();

        getContentPane().setLayout(null);

        NomeLivro.setText("RA do estudante");
        getContentPane().add(NomeLivro);
        NomeLivro.setBounds(247, 96, 95, 21);
        NomeLivro.getAccessibleContext().setAccessibleName("Nome do Livro");

        NomeLivro1.setText("Nome do Livro");
        getContentPane().add(NomeLivro1);
        NomeLivro1.setBounds(78, 96, 85, 21);

        txtRa.setEditable(false);
        txtRa.setEnabled(false);
        getContentPane().add(txtRa);
        txtRa.setBounds(253, 127, 87, 25);

        NomeLivro2.setText("Data de devolução");
        getContentPane().add(NomeLivro2);
        NomeLivro2.setBounds(189, 174, 108, 21);

        txtDataEmp.setEditable(false);
        txtDataEmp.setForeground(new java.awt.Color(51, 51, 51));
        txtDataEmp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtDataEmp.setEnabled(false);
        txtDataEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataEmpActionPerformed(evt);
            }
        });
        getContentPane().add(txtDataEmp);
        txtDataEmp.setBounds(78, 204, 84, 25);

        NomeLivro3.setText("Data de empréstimo");
        getContentPane().add(NomeLivro3);
        NomeLivro3.setBounds(78, 174, 119, 21);

        txtDataDev.setEditable(false);
        txtDataDev.setForeground(new java.awt.Color(51, 51, 51));
        txtDataDev.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtDataDev.setEnabled(false);
        getContentPane().add(txtDataDev);
        txtDataDev.setBounds(189, 204, 86, 25);

        botConfirmar.setText("Confirmar");
        botConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botConfirmarActionPerformed(evt);
            }
        });
        getContentPane().add(botConfirmar);
        botConfirmar.setBounds(211, 251, 97, 25);

        botPesquisa.setText("Pesquisar");
        botPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botPesquisaActionPerformed(evt);
            }
        });
        getContentPane().add(botPesquisa);
        botPesquisa.setBounds(211, 35, 95, 25);

        jLabel1.setText("Código do empréstimo");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(78, 6, 147, 19);
        getContentPane().add(txtCodigo);
        txtCodigo.setBounds(78, 35, 113, 25);

        jLabel2.setText("Informações empréstimo");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(78, 72, 165, 19);

        botEditar.setText("Editar");
        botEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botEditarActionPerformed(evt);
            }
        });
        getContentPane().add(botEditar);
        botEditar.setBounds(310, 35, 72, 25);

        botDeletar.setText("Deletar");
        botDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botDeletarActionPerformed(evt);
            }
        });
        getContentPane().add(botDeletar);
        botDeletar.setBounds(390, 35, 79, 25);

        txtNomeLivro.setEditable(false);
        txtNomeLivro.setEnabled(false);
        txtNomeLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeLivroActionPerformed(evt);
            }
        });
        getContentPane().add(txtNomeLivro);
        txtNomeLivro.setBounds(78, 126, 130, 25);

        botNovo.setText("Novo");
        botNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botNovoActionPerformed(evt);
            }
        });
        getContentPane().add(botNovo);
        botNovo.setBounds(138, 251, 72, 25);

        jLabel3.setText("Acervo de livros");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(366, 96, 103, 19);

        comboLivros.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboLivros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboLivrosActionPerformed(evt);
            }
        });
        getContentPane().add(comboLivros);
        comboLivros.setBounds(366, 126, 126, 25);

        fechaJanela.setText("Cancelar");
        fechaJanela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaJanelaActionPerformed(evt);
            }
        });
        getContentPane().add(fechaJanela);
        fechaJanela.setBounds(293, 251, 88, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setStatus(String action){
        if(null != action)switch (action) {
            case "Criar" -> {
                this.createConfirm = true;
                this.editConfirm = false;
                this.deleteConfirm = false;
            }
            case "Editar" -> {
                this.createConfirm = false;
                this.editConfirm = true;
                this.deleteConfirm = false;
            }
            default -> {
            }
        }
    }
    
    private void setFieldsEnabled(){
       
        txtRa.setEditable(true);
        txtRa.setEnabled(true);
        
        txtDataEmp.setEditable(true);
        txtDataEmp.setEnabled(true);
        
        txtDataDev.setEditable(true);
        txtDataDev.setEnabled(true);
    };
    
    private void setFieldsNotEnabled(){      
        txtRa.setEditable(false);
        txtRa.setEnabled(false);
        
        txtDataEmp.setEditable(false);
        txtDataEmp.setEnabled(false);
        
        txtDataDev.setEditable(false);
        txtDataDev.setEnabled(false);
    };
    
    private void botConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botConfirmarActionPerformed
        if(this.createConfirm){
            int codigoEmp = Math.abs(new Random().nextInt());

            Calendar calEmp = Calendar.getInstance();
            Calendar calDev = Calendar.getInstance();

            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

            try {

                calEmp.setTime(sdf.parse(txtDataEmp.getText()));
                calDev.setTime(sdf.parse(txtDataDev.getText()));
            } catch (ParseException ex) {

            }

            Emprestimo emprestimo = new Emprestimo(txtNomeLivro.getText(),
               codigoEmp,
               Integer.parseInt(txtRa.getText()),
               calEmp,
               calDev
            );

            //enviar para o banco de dados
            EmprestimoRdn rdn = new EmprestimoRdn();

            int verificaAluno = rdn.verificarAlunoPorRa(Integer.parseInt(txtRa.getText()));
            
            System.out.println(verificaAluno);
            if(verificaAluno == 0){
                throw new Error("Aluno inexistente");
            }
            
            rdn.inserirEmprestimo(emprestimo);
            
            emprestimo.imprimir();
        } else if(this.editConfirm){
            
            Calendar calEmp = Calendar.getInstance();
            Calendar calDev = Calendar.getInstance();

            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

            try {

                calEmp.setTime(sdf.parse(txtDataEmp.getText()));
                calDev.setTime(sdf.parse(txtDataDev.getText()));
            } catch (ParseException ex) {

            }

            Emprestimo emprestimo = new Emprestimo(txtNomeLivro.getText(),
               Integer.parseInt(txtCodigo.getText()),
               Integer.parseInt(txtRa.getText()),
               calEmp,
               calDev
            );

            emprestimo.imprimir();

            //enviar para o banco de dados
            EmprestimoRdn rdn = new EmprestimoRdn();

            boolean result = rdn.atualizarEmprestimo(emprestimo);
            
            if(result){
                System.out.println("Registro atualizado com sucesso!");
            }
        }
        
        setFieldsNotEnabled();
        
        //limpar os componentes
        limparCampos();
    }//GEN-LAST:event_botConfirmarActionPerformed

    private void txtDataEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataEmpActionPerformed
        
    }//GEN-LAST:event_txtDataEmpActionPerformed

    private void botPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botPesquisaActionPerformed
        EmprestimoRdn emprestimo = new EmprestimoRdn();
        
        Calendar calEmp = Calendar.getInstance();
        Calendar calDev = Calendar.getInstance();
        
        Emprestimo resultSearch = emprestimo.obterEmprestimoPorCodigo(Integer.parseInt(txtCodigo.getText()));
        
        if(resultSearch == null){
            System.out.println("Empréstimo não encontrado no banco!");
        };
        
        SimpleDateFormat formatoData = new SimpleDateFormat("dd/MM/yyyy");
        
        String dataFormatadaEmp = formatoData.format(resultSearch.getDataEmp().getTime());
        String dataFormatadaDev = formatoData.format(resultSearch.getDataDev().getTime());
        
        txtNomeLivro.setText(resultSearch.getNomeLivro());
        txtDataDev.setText(dataFormatadaDev);
        txtDataEmp.setText(dataFormatadaEmp);
        txtRa.setText(String.valueOf(resultSearch.getAlunoRa()));
    }//GEN-LAST:event_botPesquisaActionPerformed

    private void txtNomeLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeLivroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeLivroActionPerformed

    private void botEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botEditarActionPerformed
        setFieldsEnabled();
        setStatus("Editar");
    }//GEN-LAST:event_botEditarActionPerformed

    private void botDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botDeletarActionPerformed
        EmprestimoRdn emprestimo = new EmprestimoRdn();
            
        boolean resultDelete = emprestimo.deletarPorId(Integer.parseInt(txtCodigo.getText()));
        
        if(resultDelete){
            System.out.println("Empréstimo deletado com sucesso!!");
        };
        
        limparCampos();
    }//GEN-LAST:event_botDeletarActionPerformed

    private void botNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botNovoActionPerformed
        setFieldsEnabled();
        txtDataEmp.setEditable(false);
        txtDataEmp.setEnabled(false);
        
        txtDataDev.setEditable(false);
        txtDataDev.setEnabled(false);
        setStatus("Criar");
    }//GEN-LAST:event_botNovoActionPerformed

    private void comboLivrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboLivrosActionPerformed
        Object livro = comboLivros.getSelectedItem();
        
        txtNomeLivro.setText(livro.toString());
    }//GEN-LAST:event_comboLivrosActionPerformed

    private void fechaJanelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaJanelaActionPerformed
        this.dispose();
    }//GEN-LAST:event_fechaJanelaActionPerformed

    private void limparCampos() {
        txtRa.setText((""));
        txtDataEmp.setText("");
        txtDataDev.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label NomeLivro;
    private java.awt.Label NomeLivro1;
    private java.awt.Label NomeLivro2;
    private java.awt.Label NomeLivro3;
    private javax.swing.JButton botConfirmar;
    private javax.swing.JButton botDeletar;
    private javax.swing.JButton botEditar;
    private javax.swing.JButton botNovo;
    private javax.swing.JButton botPesquisa;
    private javax.swing.JComboBox<String> comboLivros;
    private javax.swing.JButton fechaJanela;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtDataDev;
    private javax.swing.JFormattedTextField txtDataEmp;
    private javax.swing.JTextField txtNomeLivro;
    private javax.swing.JTextField txtRa;
    // End of variables declaration//GEN-END:variables
}
